//FILE: test.js.phantom
// Testing the tmBundle with this file.

///////// HELPER METHODS

function log(msg) {
	console.log(msg + '<br/>');
}

function printArgs() {
    var i, ilen;
    for (i = 0, ilen = arguments.length; i < ilen; ++i) {
        log("    arguments[" + i + "] = " + JSON.stringify(arguments[i]));
    }
    log("");
}


var page = require('webpage').create();

page_steps = ['Home', 'Network'];

//// SETUP PAGE FUNCTIONS
page.onConsoleMessage = function(msg) {
	log('>> ' + msg + "<br />");
}

page.onLoadStarted = function() {
	log("Loading Started - " + page.step);
};

page.onLoadFinished = function() {
	log("Loading Finished - " + page.step);
	
	if(page.step == 'Home') {
		page_Home();
	} else if(page.step == 'Get Started'){
		page_GetStarted();
	}
};

page.onUrlChanged = function(targetUrl) {
	log('page.onUrlChanged');
	printArgs.apply(this, arguments)
};

//// START PAGE AUTOMATION

var url = 'http://phantomjs.org';
page.step = "Home";
page.open(url, function(status) {
	if(status != 'success') {
		log("Unable to load " + page.url + ". Exiting...");
		phantom.exit();
		return;
	} //else
	

});

function page_Home() {
	page.injectJs("./jquery.min.js");
	page.injectJs("./custom.js");

	page.evaluate(function() {
		var link = $("a:contains('Get started')");
		console.log("Clicking Link with HREF: " + link.attr('href') + "...");
		click_elem(link[0]);
	});	
	page.step = 'Get Started';
}

function page_GetStarted() {
	page.evaluate(function() {
		console.log("Title: " + document.title);
	});	

	page.close();
	setTimeout(phantom.exit, 500);
}

